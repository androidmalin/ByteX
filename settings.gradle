def excludeApp = false
def proFile = file("./upload.properties")
if (proFile != null) {
    Properties p = new Properties()
    try {
        proFile.withInputStream { stream ->
            p.load(stream)
        }
        excludeApp = p.excludeApp
    } catch (e) {
        e.printStackTrace()
    }
}
if (!excludeApp) {
//    "./publish.sh".execute().waitForProcessOutput(System.out, System.err)
    include ':example'
}

//common
include ':base-plugin'
include ':common'
include ':TransformEngine'
include ':GradleToolKit'
include ':GradleEnvApi'
project(':GradleEnvApi').projectDir = new File('GradleToolKit/GradleEnvApi')
include ':PluginConfigProcessor'
project(':PluginConfigProcessor').projectDir = new File('PluginConfig/PluginConfigProcessor')
include ':PluginConfigAnnotation'
project(':PluginConfigAnnotation').projectDir = new File('PluginConfig/PluginConfigAnnotation')

//opensource
include ':const-inline-plugin'
//pull request